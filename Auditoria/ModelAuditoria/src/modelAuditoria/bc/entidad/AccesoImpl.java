package modelAuditoria.bc.entidad;

import java.sql.Timestamp;

import model.bc.Entidad;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 10 20:32:32 ECT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AccesoImpl extends Entidad {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        IdAcceso,
        Nombre,
        Token,
        TokenApi,
        UsuarioFecha,
        UsuarioPrograma;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDACCESO = AttributesEnum.IdAcceso.index();
    public static final int NOMBRE = AttributesEnum.Nombre.index();
    public static final int TOKEN = AttributesEnum.Token.index();
    public static final int TOKENAPI = AttributesEnum.TokenApi.index();
    public static final int USUARIOFECHA = AttributesEnum.UsuarioFecha.index();
    public static final int USUARIOPROGRAMA = AttributesEnum.UsuarioPrograma.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AccesoImpl() {
        super();
    }

    /**
     * Gets the attribute value for IdAcceso, using the alias name IdAcceso.
     * @return the value of IdAcceso
     */
    public Integer getIdAcceso() {
        return (Integer) getAttributeInternal(IDACCESO);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdAcceso.
     * @param value value to set the IdAcceso
     */
    public void setIdAcceso(Integer value) {
        setAttributeInternal(IDACCESO, value);
    }

    /**
     * Gets the attribute value for Nombre, using the alias name Nombre.
     * @return the value of Nombre
     */
    public String getNombre() {
        return (String) getAttributeInternal(NOMBRE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nombre.
     * @param value value to set the Nombre
     */
    public void setNombre(String value) {
        setAttributeInternal(NOMBRE, value);
    }

    /**
     * Gets the attribute value for Token, using the alias name Token.
     * @return the value of Token
     */
    public String getToken() {
        return (String) getAttributeInternal(TOKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Token.
     * @param value value to set the Token
     */
    public void setToken(String value) {
        setAttributeInternal(TOKEN, value);
    }

    /**
     * Gets the attribute value for TokenApi, using the alias name TokenApi.
     * @return the value of TokenApi
     */
    public String getTokenApi() {
        return (String) getAttributeInternal(TOKENAPI);
    }

    /**
     * Sets <code>value</code> as the attribute value for TokenApi.
     * @param value value to set the TokenApi
     */
    public void setTokenApi(String value) {
        setAttributeInternal(TOKENAPI, value);
    }

    /**
     * Gets the attribute value for UsuarioFecha, using the alias name UsuarioFecha.
     * @return the value of UsuarioFecha
     */
    public Timestamp getUsuarioFecha() {
        return (Timestamp) getAttributeInternal(USUARIOFECHA);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsuarioFecha.
     * @param value value to set the UsuarioFecha
     */
    public void setUsuarioFecha(Timestamp value) {
        setAttributeInternal(USUARIOFECHA, value);
    }

    /**
     * Gets the attribute value for UsuarioPrograma, using the alias name UsuarioPrograma.
     * @return the value of UsuarioPrograma
     */
    public String getUsuarioPrograma() {
        return (String) getAttributeInternal(USUARIOPROGRAMA);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsuarioPrograma.
     * @param value value to set the UsuarioPrograma
     */
    public void setUsuarioPrograma(String value) {
        setAttributeInternal(USUARIOPROGRAMA, value);
    }

    /**
     * @param idAcceso key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idAcceso) {
        return new Key(new Object[] { idAcceso });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("modelAuditoria.bc.entidad.Acceso");
    }


    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        //Id refresh
        if (operation == DML_INSERT)
            setAttribute(IDACCESO, getUltimoId());
    }
}

