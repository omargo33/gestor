package modelAdministrativo.bc;

import model.bc.VistaObjeto;

import modelAdministrativo.InfoParametros;

import modelAdministrativo.bc.common.AdministrativoModulo;
import modelAdministrativo.bc.modulo.Token;
import modelAdministrativo.bc.vista.CodigoDefinidoUsuarioDetalleViewImpl;
import modelAdministrativo.bc.vista.CodigoDefinidoUsuarioEncabezadoViewImpl;
import modelAdministrativo.bc.vista.ErrorViewImpl;
import modelAdministrativo.bc.vista.InformacionViewImpl;
import modelAdministrativo.bc.vista.MenuViewImpl;

import modelAdministrativo.bc.vista.ModuloViewImpl;
import modelAdministrativo.bc.vista.ParametroViewImpl;
import modelAdministrativo.bc.vista.RolViewImpl;
import modelAdministrativo.bc.vista.UsuarioViewImpl;

import modelAuditoria.bc.AuditoriaModuloImpl;

import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 17 18:03:01 ECT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AdministrativoModuloImpl extends AuditoriaModuloImpl implements AdministrativoModulo {
    /**
     * This is the default constructor (do not remove).
     */
    public AdministrativoModuloImpl() {
        super();
        setNombreBundle("modelAdministrativo.ModelAdministrativoBundle");        
    }
    
    /**
     * Metodo para cambiar la clave con todos los datos.
     *
     * @param socialNick
     * @param passwordOld
     * @param passwordNew
     * @param passwordConfirmar
     * @param ip
     * @param userAgent
     * @param usuarioPrograma
     */
    public void cambiarClaveCompleto(String socialNick, String passwordOld, String passwordNew,
                                          String passwordConfirmar, String ip, String userAgent,
                                          String usuarioPrograma) {
        String expresionRegular = base_obtenerParametroTexto01(InfoParametros.PARAMETRO_EXPRESION_REGULAR);
        String mensajeExpresionRegular = base_obtenerParametroTexto02(InfoParametros.PARAMETRO_EXPRESION_REGULAR);
        
        Token.cambiarTokenCompleto(this, socialNick, passwordOld, passwordNew, passwordConfirmar, expresionRegular,
                                   mensajeExpresionRegular, ip, userAgent, usuarioPrograma);
    }    
    
    /**
     * Metodo para crear un token.
     * 
     */
    public void administrativo_crearToken(int idToken){            
        Token.crearToken(this, idToken);    
    }
    /**
     * Container's getter for UsuarioView2.
     * @return UsuarioView2
     */
    public ViewObjectImpl getUsuarioView1() {
        return (ViewObjectImpl) findViewObject("UsuarioView1");
    }

    /**
     * Container's getter for RolView1.
     * @return RolView1
     */
    public ViewObjectImpl getRolView1() {
        return (ViewObjectImpl) findViewObject("RolView1");
    }

    /**
     * Container's getter for CodigoDefinidoUsuarioView1.
     * @return CodigoDefinidoUsuarioView1
     */
    public CodigoDefinidoUsuarioEncabezadoViewImpl getCodigoDefinidoUsuarioView1() {
        return (CodigoDefinidoUsuarioEncabezadoViewImpl) findViewObject("CodigoDefinidoUsuarioView1");
    }

    /**
     * Container's getter for ModuloView1.
     * @return ModuloView1
     */
    public ViewObjectImpl getModuloView1() {
        return (ViewObjectImpl) findViewObject("ModuloView1");
    }

    /**
     * Container's getter for CodigoDefinidoUsuarioEncabezadoView1.
     * @return CodigoDefinidoUsuarioEncabezadoView1
     */
    public CodigoDefinidoUsuarioEncabezadoViewImpl getCodigoDefinidoUsuarioEncabezadoView1() {
        return (CodigoDefinidoUsuarioEncabezadoViewImpl) findViewObject("CodigoDefinidoUsuarioEncabezadoView1");
    }

    /**
     * Container's getter for CodigoDefinidoUsuarioDetalleView2.
     * @return CodigoDefinidoUsuarioDetalleView2
     */
    public CodigoDefinidoUsuarioDetalleViewImpl getCodigoDefinidoUsuarioDetalleView2() {
        return (CodigoDefinidoUsuarioDetalleViewImpl) findViewObject("CodigoDefinidoUsuarioDetalleView2");
    }

    /**
     * Container's getter for CodigoDefinidoUsuarioFkLink1.
     * @return CodigoDefinidoUsuarioFkLink1
     */
    public ViewLinkImpl getCodigoDefinidoUsuarioFkLink1() {
        return (ViewLinkImpl) findViewLink("CodigoDefinidoUsuarioFkLink1");
    }

    /**
     * Container's getter for RolUsuarioView1.
     * @return RolUsuarioView1
     */
    public ViewObjectImpl getRolUsuarioView1() {
        return (ViewObjectImpl) findViewObject("RolUsuarioView1");
    }

    /**
     * Container's getter for UsuarioRolFkLink1.
     * @return UsuarioRolFkLink1
     */
    public ViewLinkImpl getUsuarioRolFkLink1() {
        return (ViewLinkImpl) findViewLink("UsuarioRolFkLink1");
    }


    /**
     * Container's getter for RolModuloFkLink1.
     * @return RolModuloFkLink1
     */
    public ViewLinkImpl getRolModuloFkLink1() {
        return (ViewLinkImpl) findViewLink("RolModuloFkLink1");
    }

    /**
     * Container's getter for ModuloRolFkLink1.
     * @return ModuloRolFkLink1
     */
    public ViewLinkImpl getModuloRolFkLink1() {
        return (ViewLinkImpl) findViewLink("ModuloRolFkLink1");
    }

    /**
     * Container's getter for ParametroView1.
     * @return ParametroView1
     */
    public ViewObjectImpl getParametroView1() {
        return (ViewObjectImpl) findViewObject("ParametroView1");
    }

    /**
     * Container's getter for ModuloParametroFkLink1.
     * @return ModuloParametroFkLink1
     */
    public ViewLinkImpl getModuloParametroFkLink1() {
        return (ViewLinkImpl) findViewLink("ModuloParametroFkLink1");
    }

    /**
     * Container's getter for InformacionView1.
     * @return InformacionView1
     */
    public ViewObjectImpl getInformacionView1() {
        return (ViewObjectImpl) findViewObject("InformacionView1");
    }

    /**
     * Container's getter for ErrorView1.
     * @return ErrorView1
     */
    public ViewObjectImpl getErrorView1() {
        return (ViewObjectImpl) findViewObject("ErrorView1");
    }

    /**
     * Container's getter for TokenView1.
     * @return TokenView1
     */
    public ViewObjectImpl getTokenView1() {
        return (ViewObjectImpl) findViewObject("TokenView1");
    }

    /**
     * Container's getter for UsuarioTokenFkLink1.
     * @return UsuarioTokenFkLink1
     */
    public ViewLinkImpl getUsuarioTokenFkLink1() {
        return (ViewLinkImpl) findViewLink("UsuarioTokenFkLink1");
    }

    /**
     * Container's getter for TokenView2.
     * @return TokenView2
     */
    public ViewObjectImpl getTokenView2() {
        return (ViewObjectImpl) findViewObject("TokenView2");
    }

    /**
     * Container's getter for AccesosRedesNoDML1.
     * @return AccesosRedesNoDML1
     */
    public ViewObjectImpl getAccesosRedesNoDML1() {
        return (ViewObjectImpl) findViewObject("AccesosRedesNoDML1");
    }

    /**
     * Container's getter for UsuariosSinCorreo1.
     * @return UsuariosSinCorreo1
     */
    public ViewObjectImpl getUsuariosSinCorreoNoDML1() {
        return (ViewObjectImpl) findViewObject("UsuariosSinCorreoNoDML1");
    }

    /**
     * Container's getter for MenuView1.
     * @return MenuView1
     */
    public MenuViewImpl getMenuView1() {
        return (MenuViewImpl) findViewObject("MenuView1");
    }

    /**
     * Container's getter for PermisoView1.
     * @return PermisoView1
     */
    public ViewObjectImpl getPermisoView1() {
        return (ViewObjectImpl) findViewObject("PermisoView1");
    }

    /**
     * Container's getter for MenuPermisoFkLink1.
     * @return MenuPermisoFkLink1
     */
    public ViewLinkImpl getMenuPermisoFkLink1() {
        return (ViewLinkImpl) findViewLink("MenuPermisoFkLink1");
    }

    /**
     * Container's getter for ModuloUsuarioViewNoDML1.
     * @return ModuloUsuarioViewNoDML1
     */
    public VistaObjeto getModuloUsuarioViewNoDML1() {
        return (VistaObjeto) findViewObject("ModuloUsuarioViewNoDML1");
    }

    /**
     * Container's getter for ModuloUsuarioViewLink1.
     * @return ModuloUsuarioViewLink1
     */
    public ViewLinkImpl getModuloUsuarioViewLink1() {
        return (ViewLinkImpl) findViewLink("ModuloUsuarioViewLink1");
    }

    /**
     * Container's getter for TokenView5.
     * @return TokenView5
     */
    public VistaObjeto getTokenView3() {
        return (VistaObjeto) findViewObject("TokenView3");
    }
}

