package model.bc.modulo;import model.utilidades.Atributos;import model.bc.ModuloImpl;import model.bc.entidad.GrupoImpl;import oracle.jbo.Row;import oracle.jbo.VariableValueManager;import oracle.jbo.ViewCriteria;import oracle.jbo.ViewCriteriaManager;import oracle.jbo.ViewObject;/** * Objeto para crear el grupo de archivos * * @author omargo33@hotmail.com */public class Grupo {    /**     *     * Metodo para crear un grupo.     *     * @param moduloAplicacion     * @param id     * @param esquema     * @param tabla     * @param largoMaximo     * @param extensiones     * @param ancho     * @param alto     * @param usuario     * @param usuarioPrograma     * @return     */    public static int crearGrupo(ModuloImpl moduloAplicacion, int id, String esquema, String tabla,                                 int largoMaximo, String extensiones, int ancho, int alto,int maximoArchivo, String usuario,                                 String usuarioPrograma) {        int codigo = 0;        boolean estado = true;        ViewObject vo = moduloAplicacion.getBase_GrupoView1();        Row row = vo.createRow();        row.setAttribute(GrupoImpl.ID, id);        row.setAttribute(GrupoImpl.ESQUEMA, Atributos.stringLargo(esquema, Atributos.NO_APLICA, 16));        row.setAttribute(GrupoImpl.TABLA, Atributos.stringLargo(tabla, Atributos.NO_APLICA, 32));        row.setAttribute(GrupoImpl.LARGOMAXIMO, largoMaximo*1024);        row.setAttribute(GrupoImpl.EXTENSIONES, Atributos.stringLargo(extensiones, Atributos.NO_APLICA, 128));        row.setAttribute(GrupoImpl.ANCHO, ancho);        row.setAttribute(GrupoImpl.ALTO, alto);        row.setAttribute(GrupoImpl.MAXIMOARCHIVO, maximoArchivo);        row.setAttribute(GrupoImpl.USUARIO, Atributos.stringLargo(usuario, Atributos.NO_APLICA, 128));                row.setAttribute(GrupoImpl.USUARIOPROGRAMA, Atributos.stringLargo(usuarioPrograma, Atributos.NO_APLICA, 256));        row.validate();        vo.insertRow(row);        estado = moduloAplicacion.commitRollback(tabla, "crearGrupo");        if (estado) {            codigo = ((Integer) row.getAttribute(GrupoImpl.IDGRUPO));        } else {            codigo = -1;        }        return codigo;    }    /**     *     * Metodo para obtener el grupo imagen ya creado.     *     * @param moduloAplicacion     * @param id     * @param esquema     * @param tabla     * @return     */    public static int buscarGrupo(ModuloImpl moduloAplicacion, int id, String esquema, String tabla) {        int codigo = 0;        ViewObject vo = moduloAplicacion.getBase_GrupoView1();        ViewCriteriaManager vcm = vo.getViewCriteriaManager();        ViewCriteria vc = vcm.getViewCriteria("GrupoViewCriteria");        VariableValueManager vvm = vc.ensureVariableManager();        vvm.setVariableValue("v_Id", id);        vvm.setVariableValue("v_Esquema", esquema);        vvm.setVariableValue("v_Tabla", tabla);        vo.applyViewCriteria(vc);        vo.executeQuery();        while (vo.hasNext()) {            Row r = vo.next();            codigo = (Integer) r.getAttribute(GrupoImpl.IDGRUPO);        }        return codigo;    }}