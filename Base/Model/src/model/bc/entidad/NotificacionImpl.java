package model.bc.entidad;import model.bc.Entidad;import oracle.jbo.Key;import oracle.jbo.server.EntityDefImpl;import oracle.jbo.server.TransactionEvent;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Fri Jun 10 23:23:18 ECT 2022// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class NotificacionImpl extends Entidad {    /**     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.     */    protected enum AttributesEnum {        IdNotificacion,        IdFormato,        IdServicio,        Titulo,        Contenido,        DireccionEnvio,        Estado,        Anular,        FechaEnvio,        Usuario,        UsuarioFecha,        UsuarioPrograma;        private static AttributesEnum[] vals = null;        private static final int firstIndex = 0;        protected int index() {            return AttributesEnum.firstIndex() + ordinal();        }        protected static final int firstIndex() {            return firstIndex;        }        protected static int count() {            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;        }        protected static final AttributesEnum[] staticValues() {            if (vals == null) {                vals = AttributesEnum.values();            }            return vals;        }    }    public static final int IDNOTIFICACION = AttributesEnum.IdNotificacion.index();    public static final int IDFORMATO = AttributesEnum.IdFormato.index();    public static final int IDSERVICIO = AttributesEnum.IdServicio.index();    public static final int TITULO = AttributesEnum.Titulo.index();    public static final int CONTENIDO = AttributesEnum.Contenido.index();    public static final int DIRECCIONENVIO = AttributesEnum.DireccionEnvio.index();    public static final int ESTADO = AttributesEnum.Estado.index();    public static final int ANULAR = AttributesEnum.Anular.index();    public static final int FECHAENVIO = AttributesEnum.FechaEnvio.index();    public static final int USUARIO = AttributesEnum.Usuario.index();    public static final int USUARIOFECHA = AttributesEnum.UsuarioFecha.index();    public static final int USUARIOPROGRAMA = AttributesEnum.UsuarioPrograma.index();    /**     * This is the default constructor (do not remove).     */    public NotificacionImpl() {        super();    }    /**     * @param idNotificacion key constituent     * @return a Key object based on given key constituents.     */    public static Key createPrimaryKey(Integer idNotificacion) {        return new Key(new Object[] { idNotificacion });    }    /**     * @return the definition object for this instance class.     */    public static synchronized EntityDefImpl getDefinitionObject() {        return EntityDefImpl.findDefObject("model.bc.entidad.Notificacion");    }    /**     * Add locking logic here.     */    public void lock() {        super.lock();    }    /**     * Custom DML update/insert/delete logic here.     * @param operation the operation type     * @param e the transaction event     */    protected void doDML(int operation, TransactionEvent e) {        super.doDML(operation, e);        if (operation == DML_INSERT) {            setAttribute(IDNOTIFICACION, getUltimoId());        }    }}