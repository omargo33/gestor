package view.plantilla;import java.math.BigDecimal;import java.util.logging.Level;import java.util.logging.Logger;import javax.faces.component.UIComponent;import oracle.adf.view.rich.context.AdfFacesContext;/** * * @author omargo33@hotmail.com */public class BasePPR extends BaseBean {    public BasePPR() {        super();    }    /**     * Metodo para add do Partitial.     *     * @param uc     */    public void doPartialRefresh(UIComponent uc) {        AdfFacesContext adfctx = AdfFacesContext.getCurrentInstance();        adfctx.addPartialTarget(uc);    }    /**     * Metodo para convertir en int     *     * @param valor     * @return     */    public int convertirInt(Object valor) {        int respuesta = 0;        try {            respuesta = Integer.parseInt(String.valueOf(valor));        } catch (Exception e) {            respuesta = 0;        }        return respuesta;    }    /**     * Metodo para convertir en String.     *     * @param valor     * @return     */    public String convertirString(Object valor) {        String tipo = "";        String respuesta = "";        if (valor == null) {            return respuesta;        } else {            tipo = valor.getClass().getName();            switch (tipo) {            case "java.util.Date":                respuesta = valor.toString();                break;            case "java.lang.String":                respuesta = String.valueOf(valor);                break;            case "java.math.BigDecimal":                try {                    respuesta = ((BigDecimal)valor).toString();                } catch (Exception e) {                    Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.WARNING, "tipo=" + tipo + " valor=" + valor);                    respuesta = "-2";                }                break;            default:                respuesta = "-1";            }        }        return respuesta;    }}