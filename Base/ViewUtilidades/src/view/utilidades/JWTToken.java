package view.utilidades;import java.util.logging.Level;import java.util.logging.Logger;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class JWTToken extends HttpServlet {    @SuppressWarnings("compatibility:-3317262735471407773")    private static final long serialVersionUID = 1L;    public JWTToken() {        super();        generarToken(null, null);            }    /**     *     * Toma lo datos de consultaME para encriptar.     *     * Encripta los datos     */    private String generarToken(HttpServletRequest request, HttpServletResponse response) {        Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, request.toString());        Logger.getLogger(Logger.GLOBAL_LOGGER_NAME).log(Level.SEVERE, response.toString());     /*   long timeOut = 6000L * 60;        String tokenType = GenerateKey.REFRESH_TOKEN;        String iss = request        iss = iss.substring(0, iss.length() - (uriInfo.getPath().length()));        Date fechaActual = new Date();        Date fechaFin = new Date(fechaActual.getTime() + timeOut);        GenerateKey generateKey = new GenerateKey();        generateKey.firmar();        JwtBuilder jwtBuilder = Jwts.builder()                                    .claim("idDevice", cifrar(consultaME.getDispositivoEB().getIdDispositivo()))                                    .claim("type", tokenType)                                    .setSubject(cifrar(consultaME.getDispositivoEB().getIpDispositivo()))                                    .setIssuer(iss)                                    .setIssuedAt(fechaActual)                                    .setExpiration(fechaFin)                                    .signWith(generateKey.getSignatureAlgorithm(), generateKey.getSigningKey());        String jwtToken = jwtBuilder.compact();*/        //return jwtToken;        return "";    }}