package modelLogin.bc;


import model.bc.VistaObjeto;

import modelAuditoria.bc.AuditoriaModuloImpl;

import modelLogin.bc.common.LoginModulo;
import modelLogin.bc.modulo.Login;
import modelLogin.bc.modulo.Token;

import oracle.jbo.server.ViewObjectImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 02 18:35:18 ECT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoginModuloImpl extends AuditoriaModuloImpl implements LoginModulo {
    
    
    /**
     * This is the default constructor (do not remove).
     */
    public LoginModuloImpl() {
        super();
        setNombreBundle("modelLogin.ModelLoginBundle");        
    }
   
    /**
     * Metodo para validar el ingreso desde la cuenta de base y con la pantalla con google captcha.
     *
     * @param nick
     * @param password
     * @param tokenGoogle
     * @param ip
     * @param userAgent
     * @param usuarioPrograma
     * @return
     */
    public String validarUsuario(String nick, String password, String tokenGoogle, String ip, String userAgent, String usuarioPrograma){                
            return Login.validarUsuario(this, nick, password, tokenGoogle, ip, userAgent, usuarioPrograma);
        }
    
    /**
     * Metodo para conocer el contexto inicial.
     *     
     * @param nick
     * @return
     */
    public String contextoInicial( String nick){
            return Login.contextoInicial(this,  nick);
        }
    
    /**
     * Metodo para enviar el correo con la informacion del correo.
     * 
     * De la misma manera audita si hay usuarios "jugando" con el formulario.
     * Cambia el estado del token para que se solicite el cambio de clave.
     *
     * @param correo
     * @param ip
     * @param userAgent
     * @param usuarioPrograma
     */
    public void enviarToken( String correo, String ip, String userAgent, String usuarioPrograma){
            Token.enviarToken(this, correo, ip,userAgent, usuarioPrograma);        
        }

    /**
     * Container's getter for UsuarioCorreoViewNoDML1.
     * @return UsuarioCorreoViewNoDML1
     */
    public ViewObjectImpl getUsuarioCorreoViewNoDML1() {
        return (ViewObjectImpl) findViewObject("UsuarioCorreoViewNoDML1");
    }

    /**
     * Container's getter for UsuarioView1.
     * @return UsuarioView1
     */
    public ViewObjectImpl getUsuarioView1() {
        return (ViewObjectImpl) findViewObject("UsuarioView1");
    }

    /**
     * Container's getter for TokenServidorView1.
     * @return TokenServidorView1
     */
    public ViewObjectImpl getTokenServidorView1() {
        return (ViewObjectImpl) findViewObject("TokenServidorView1");
    }

    /**
     * Container's getter for TokenView1.
     * @return TokenView1
     */
    public ViewObjectImpl getTokenView1() {
        return (ViewObjectImpl) findViewObject("TokenView1");
    }
}

